name: Tag and Distribute

on:
  push:
    branches:
      - main


jobs:
  package:
    runs-on: ubuntu-latest
    outputs:
      SDIST_VERSION:  ${{ steps.build.outputs.version }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.TOOLS_BOT_PAK }}

      - name: Get associated PR
        uses: helaili/github-graphql-action@2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.TOOLS_BOT_PAK }}
        with:
          query: .github/queries/asssociated-pr.query.yml
          outputFile: pr.json
          owner: ASFHyP3
          name: mkdocs-asf-theme
          sha: ${{ github.sha }}

      - name: Get PR labels
        uses: helaili/github-graphql-action@2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.TOOLS_BOT_PAK }}
        with:
          query: .github/queries/pr-labels.query.yml
          outputFile: labels.json
          owner: ASFHyP3
          name: mkdocs-asf-theme

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: query-responces
          path: '*.json'

      - uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools wheel twine "setuptools-scm[toml]"
          python -m pip install bump2version

      - name: Tag version
        run: |
          git fetch origin +refs/tags/*:refs/tags/*
          git config user.email "UAF-asf-apd@alaska.edu"
          git config user.name "tools-bot"

          LABEL_QUERY='.data.repository.pullRequest.labels.nodes[].name'
          SELECT='select(. == "major" or . == "minor" or . == "patch")'
          BUMP_PART=$(jq --raw-output  "${LABEL_QUERY} | ${SELECT}" labels.json | sort | head -1)

          PR_QUERY='.data.repository.commit.associatedPullRequests.edges[0].node.title'
          TAG_MSG=$(jq --raw-output "${PR_QUERY}"  pr.json)

          bump2version --current-version $(git describe --abbrev=0) \
              --tag --tag-message "${TAG_MSG}" "${BUMP_PART}"

          git push --tags
          echo "Tagged version $(git describe --abbrev=0) and pushed back to repo"

      - name: Build package
        id: build
        run: |
          git fetch origin +refs/tags/*:refs/tags/*
          export SDIST_VERSION=$(python setup.py --version)
          echo "::set-output name=version::${SDIST_VERSION}"
          python setup.py sdist bdist_wheel

      - name: Upload to PyPI.org
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.TOOLS_PYPI_PAK }}

  verify-packaging:
    runs-on: ubuntu-latest
    needs: package
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Pip install ${{ needs.package.outputs.SDIST_VERSION }}
        shell: bash -l {0}
        run: |
          python -m pip install mkdocs-asf-theme==${{ needs.package.outputs.SDIST_VERSION }}
